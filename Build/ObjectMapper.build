<?xml version="1.0"?>
<project name="ObjectMapper .NET" default="build" basedir=".">
	<description>The .NET Persistence Framework for Oracle, Microsoft SQL Server, Microsoft Access and XML Files.</description>

	<!-- load nant contrib tasks-->
	<loadtasks assembly="C:\Program Files\nantcontrib-0.85\bin\NAnt.Contrib.Tasks.dll"/>
	
	<property name="ProgramDir" value = "C:\Program Files"/>

	<!--
	******************************************************
	PROPERTY SECTION
	******************************************************  -->
  	<property name="visual.studio.2008"   	value=".NET2008"/>

  	<property name="build.number"         	value="build.number"/>
	<property name="intranet.dir.root"    	value="E:\HtmlOut\ObjectMapper"/>
<!--	<property name="intranet.dir.templates" value="${intranet.dir.root}\templates"/>
	<property name="intranet.dir.doc.html" 	value="${intranet.dir.templates}\html"/> -->
	<property name="intranet.dir.download" 	value="${intranet.dir.root}"/>
	<property name="internet.download"    	value="http://downloads.sourceforge.net/objectmapper"/>
	<property name="source.dir.root"      	value="..\Source"/>
  	<property name="obj.dir.root"      	value="..\Source\obj"/>
	<property name="doc.dir.root"         	value="..\Documentation"/>
	<property name="project.dir.root"     	value=".."/>
  	<property name="build.dir"            	value="..\Output"/>
  	<property name="build.dir.build"      	value="."/>
	<property name="build.file.changelog" 	value="${build.dir.build}\changelog.txt"/>
	<property name="innosetup" 		value="c:\Programme\Inno Setup 5\iscc"/>
	<property name="cvs.root" 		value=":ssh;username=Jachman;hostname=objectmapper.cvs.sourceforge.net;privatekey='E:\BuildSystem\GerhardStephan.ppk':/cvsroot/objectmapper" />

	<attrib file="${build.number}" readonly="true"/>
	<loadfile file="${build.number}" property="build.version" />

  	<property name="release.dir.root"     	value="D:\Release\ObjectMapper .NET"/>
  	<property name="release.dir.temp"     	value="${release.dir.root}"/>
  	<property name="release.dir.release"  	value="${release.dir.root}\Release"/>
  	<property name="release.dir.current" 	value="${release.dir.release} ${build.version}"/>
  	<property name="release.dir.bin" 	value="${release.dir.current}\Output"/>
  	<property name="release.dir.doc" 	value="${release.dir.current}\Documentation"/>
  	<property name="release.dir.src" 	value="${release.dir.current}\Source"/>

  	<property name="release.file.zip" 	value="ObjectMapper_${build.version}.zip"/>
  	<property name="release.file.exe" 	value="ObjectMapper_${build.version}.exe"/>

  	<property name="build.dir.doc"        	value="${build.dir}\doc"/>
  	<property name="build.dir.doc.html"   	value="${build.dir.doc}"/>
  	<property name="build.dir.doc.chm"    	value="${build.dir.doc}"/>
  	<property name="build.dir.doc.single" 	value="${build.dir.doc}"/>

  	<property name="nunit.exe"            	value="nunit-console-x86.exe"/>
  	<property name="nunit.out"            	value="${build.dir}\NUnit"/>
  	<property name="nunit.bin.dir"        	value="${project.dir.root}\NUnits\bin\Debug"/>
  	<property name="nunit.bin.dll"        	value="${nunit.bin.dir}\ObjectMapper.NUnits.dll"/>
  	<property name="nunit.bin.config"     	value="${nunit.bin.dir}\ObjectMapper.Nunits.dll.config"/>

  	<property name="fxcop.exe"        value="${ProgramDir}\Microsoft FxCop 1.36\FxCopCmd.exe"/>
  	<property name="fxcop.project"    	value="${build.dir.build}\ObjectMapper.fxCop"/>
  	<property name="fxcop.out"        	value="${build.dir}\FxCop.xml"/>

  	<property name="ncover.exe"       	value="NCover.Console.exe"/>
  	<property name="ncoverexplorer.exe" 	value="ncoverexplorer.console.exe"/>
  	<property name="ncover.out"        	value="${build.dir}\NCover"/>

  	<property name="simian.exe"     	value="${ProgramDir}\Simian\bin\simian-2.2.21.exe"/>
  	<property name="simian.out"        	value="${build.dir}\Simian.xml"/>

	<property name="cvs.exe"		value="c:\programme\cvsnt\cvs.exe"/>

  	<include buildfile="Sandcastle.include"/>

  <!--
	******************************************************
	TARGET SECTION
	******************************************************  -->
  <target name="buildMapper" >

    <!-- CLEAN Build directory -->

    <delete dir="${build.dir}" failonerror="false"/>
    <mkdir dir="${build.dir}"/>

    <!-- BUILD OBJECTMAPPER .NET -->

    <call target="settings_2008"/>
    <call target="clean"/>
    <call target="compile"/>
    <call target="testMapper"/>
    
  </target>

  <!-- 
	******************************************************
	Run the ObjectMapper .NET NUnit Tests
	******************************************************  -->
  <target name="testMapper">

    <!-- Run the Access Tests -->
    <property name="DatabaseType" value="Access"/>
    <call target="testMapperForDatabaseType"/>

    <!-- Run the SqlServer CE Tests -->
    <property name="DatabaseType" value="SqlServerCE"/>
    <call target="testMapperForDatabaseType"/>

    <!-- Run the SqlServer Tests -->
    <property name="DatabaseType" value="SqlServer"/>
    <call target="testMapperForDatabaseType"/>

    <!-- Run the Oracle Tests
    <property name="DatabaseType" value="Oracle"/>
    <call target="testMapperForDatabaseType"/> -->

    <!-- Make Report -->
    <exec
      program="${ncoverexplorer.exe}"
      workingdir="."
      commandline="&quot;${ncover.out}.*.xml&quot; /s:&quot;${build.dir}\Coverage.xml&quot;"/>

    <delete>
      <fileset basedir="${build.dir}/" >
        <include name="NCover.*.xml"/>
      </fileset>
    </delete>

    <exec
      program="${ncoverexplorer.exe}"
      workingdir="."
      commandline="&quot;${build.dir}\Coverage.xml&quot; /x:&quot;${build.dir}\CoverageReport.xml&quot; /h:&quot;${build.dir}\Coverage.html&quot; /r:ModuleClassSummary /p:ObjectMapper"/>

  </target>

  <!-- 
	******************************************************
	Create a simian report to find duplicate code
	******************************************************  -->
  <target name="simian" description="finds duplicate code">
    <exec program="${simian.exe}" failonerror="false">
      <arg value="-includes=${source.dir.root}\**\*.cs"/>
      <arg value="-formatter=xml:${simian.out}"/>
    </exec>
  </target>
  
  <!-- 
	******************************************************
	Set a new Database Type for the NUnit Tests
	******************************************************  -->
  <target name="testMapperForDatabaseType">

    <echo message = "Test ObjectMapper .NET for ${DatabaseType}"/>

    <copy tofile="${nunit.bin.config}" file="${nunit.bin.dir}\Nunit.${DatabaseType}.config" overwrite="true"/>

    <exec program="${ncover.exe}" failonerror="false">
      <arg value="//x &quot;${ncover.out}.${DatabaseType}.xml&quot;"/>
      <arg value="//a &quot;ObjectMapper&quot;"/>
      <arg value="${nunit.exe}"/>
      <arg value="${nunit.bin.dll}"/>
      <arg value="/xml=${nunit.out}.${DatabaseType}.xml"/>
      <arg value="/exclude=ExcludeFor${DatabaseType}"/>
      <arg value="/nologo"/>
    </exec>
    
  </target>

  <!-- 
	******************************************************
	BUILD TUTORIALS
	******************************************************  -->
  <target name="buildTutorials">

    <!-- BUILD TUTORIALS -->

    <call target="settings_tutorial01"/>
    <call target="compile"/>

    <call target="settings_tutorial02"/>
    <call target="compile"/>
    <call target="nUnitTest"/>

    <call target="settings_tutorial03"/>
    <call target="compile"/>
    <call target="nUnitTest"/>

    <call target="settings_tutorial04"/>
    <call target="compile"/>
    <call target="nUnitTest"/>
  </target>

  <!-- 
	******************************************************
	FX COP
	******************************************************  -->
  <target name="fxcop" >
    <exec program="${fxcop.exe}"
      commandline="/p:${fxcop.project} /o:${fxcop.out}" failonerror="false"/>
  </target>

  <!-- 
	******************************************************
	DEPLOYMENT
	******************************************************  -->
  <target name="startDeployment" depends="incVersion, asmInfo"/>
  <target name="endDeployment" depends="commitCVS, tagRelease"/>

  <!-- 
	******************************************************
	Set all Settings
	******************************************************  -->
  <target name="settings">
    <property name="build.dir.root"       value="..\Output\${visual.studio}"/>
    <property name="build.dir.debug"      value="${build.dir.root}\debug"/>
    <property name="build.dir.release"    value="${build.dir.root}\release"/>
    
    <property name="document.solution"    value="${build.dir.debug}"/>        <!-- this solution will be documented -->
  </target>

    <!-- 
	******************************************************
	Set Settings for .NET 2008
	******************************************************  -->
  <target name="settings_2008" description="set all settings">
    <property name="visual.studio"        value="${visual.studio.2008}"/>
    <property name="framework.dir"        value="C:\WINDOWS\Microsoft.NET\Framework\v3.5"/>
    <property name="solution.file"        value ="ObjectMapper .NET 2008.sln" />
    <call target="settings"/>
  </target>

  <!-- 
	******************************************************
	Set Settings for .NET Tutorial01
	******************************************************  -->
  <target name="settings_tutorial01" description="set settings for Tutorial 01" depends="settings_2008">
    <property name="solution.file"        value ="Tutorial01\Tutorial01\Tutorial01.sln" />
  </target>

  <!-- 
	******************************************************
	Set Settings for .NET Tutorial02
	******************************************************  -->
  <target name="settings_tutorial02" description="set settings for Tutorial 02" depends="settings_2008">
    <property name="solution.file"        value ="Tutorial02\Tutorial02\Tutorial02.sln" />
    <property name="solution.output"      value ="Tutorial02\Tutorial02\bin\debug\Tutorial02.dll" />
  </target>

  <!-- 
	******************************************************
	Set Settings for .NET Tutorial03
	******************************************************  -->
  <target name="settings_tutorial03" description="set settings for Tutorial 03" depends="settings_2008">
    <property name="solution.file"        value ="Tutorial03\Tutorial03\Tutorial03.sln" />
    <property name="solution.output"      value ="Tutorial03\Tutorial03\bin\debug\Tutorial03.dll" />
  </target>

  <!-- 
	******************************************************
	Set Settings for .NET Tutorial04
	******************************************************  -->
  <target name="settings_tutorial04" description="set settings for Tutorial 04" depends="settings_2008">
    <property name="solution.file"        value ="Tutorial04\Tutorial04\Tutorial04.sln" />
    <property name="solution.output"      value ="Tutorial04\Tutorial04\bin\debug\Tutorial04.dll" />
  </target>

  <!-- 
	******************************************************
	Executes the test cases
	******************************************************  -->
  <target name="nUnitTest" description="Execute Test cases">

    <nunit2>
      <formatter type="Xml" usefile="false"/>
      <test assemblyname="${project.dir.root}\${solution.output}" />
    </nunit2>
    
  </target>
          
  <!--
	******************************************************
	CLEAN OUTPUT DIRECTORY
	******************************************************  -->
	<target name="clean" description="remove all generated files" depends="cleanTutorials">
    <delete dir="${build.dir.debug}" failonerror="false"/>
    <delete dir="${build.dir.release}" failonerror="false"/>
    <delete dir="${obj.dir.root}" failonerror="false"/>
  </target>

  <!--
	******************************************************
	CLEAN OUTPUT DIRECTORY
	******************************************************  -->
  <target name="cleanTutorials" description="cleans the binary directories from the tutorials">
    <delete>
      <fileset basedir="${project.dir.root}/" >
        <include name="Tutorial*/**/bin/**"/>
        <include name="Tutorial*/**/obj/**"/>                 
      </fileset>
    </delete>
  </target>

  <!--
	******************************************************
	CREATE ASM INFO
	******************************************************  -->
	<target name="asmInfo">
		<asminfo output="${source.dir.root}\AssemblyInfo.cs" language="CSharp">
				<imports>
					<import namespace="System" />
					<import namespace="System.Reflection" />
					<import namespace="System.Runtime.InteropServices" />
				</imports>
				<attributes>
					<attribute type="AssemblyTitleAttribute" value="ObjectMapper .NET" />
					<attribute type="AssemblyDescriptionAttribute" value="The .NET Persistence Framework for Oracle, Microsoft SQL Server, Microsoft Access and XML Files." />
					<attribute type="AssemblyCompanyAttribute" value="Gerhard Stephan Softwareentwicklung" />
					<attribute type="AssemblyProductAttribute" value="ObjectMapper .NET" />
					<attribute type="AssemblyCopyrightAttribute" value="(c) by Gerhard Stephan" />
					<attribute type="AssemblyVersionAttribute" value="${build.version}" />
					<attribute type="AssemblyDelaySignAttribute" value="false" />
					<attribute type="AssemblyKeyFileAttribute" value="..\..\ObjectMapper.snk" />
					<attribute type="CLSCompliantAttribute" value="true" />
					<attribute type="ComVisibleAttribute" value="false" />
				</attributes>
		</asminfo>
	</target>

	<!--
	******************************************************
	COMPILE SOLUTION
	******************************************************  -->
	<target name="compile" description="compiles the source code" depends="asmInfo">

    <exec program="${framework.dir}\msbuild.exe" commandline='"${project.dir.root}\${solution.file}" /t:Rebuild /p:Configuration=Debug'/>
    <exec program="${framework.dir}\msbuild.exe" commandline='"${project.dir.root}\${solution.file}" /t:Rebuild /p:Configuration=Release'/>

  </target>

	<!--
	******************************************************
	CREATE DOCUMENTATION
	******************************************************  -->
	<target name="buildDoc" depends="settings_2008">
    <echo message="${build.dir.doc.html}"/>
		<delete dir="${build.dir.doc}" failonerror="false"/>

    <!-- Create documentation -->
    <call target="Sandcastle.Doc"/>

    <!-- Move to destination -->
    <copy todir="${build.dir.doc.chm}" file ="${sandcastle.chm.dir}\ObjectMapper.chm" overwrite="true"/>
    
	</target>

	<!--
	******************************************************
	INCREASE THE VERSION NUMBER
	******************************************************  -->
	<target name="incVersion">
		<attrib file="${build.number}" readonly="false"/>
		<version prefix="build" buildtype="MonthDay" startdate="2006/01/01" revisiontype="Increment" failonerror="false" path="${build.number}"/>
		<property name="release.dir.current" value="${release.dir.release} ${build.version}"/>
		<property name="release.dir.bin" value="${release.dir.current}\Output\"/>
		<property name="release.dir.doc" value="${release.dir.current}\Documentation"/>
		<property name="release.dir.src" value="${release.dir.current}\Source"/>
		<property name="release.file.zip" value="ObjectMapper_${build.version}.zip"/>
		<property name="release.file.exe" value="ObjectMapper_${build.version}.exe"/>
		<attrib file="${build.number}" readonly="true"/>
	</target>

	<!--
	******************************************************
	DEPLOY THE RELEASE FILES
	******************************************************  -->
	<target name="deployRelease">

		<!-- 
		___________________________________________________
		Clean the current release directory
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
		<delete dir="${release.dir.current}" failonerror="false"/>
		<mkdir dir="${release.dir.current}"/>
		<mkdir dir="${release.dir.temp}"/>

		<!-- 
		___________________________________________________
		Copy the source files to the release directory
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
    <copy todir="${release.dir.current}" overwrite="true">
      <fileset basedir="${project.dir.root}">
        <include name="*.sln"/>
      </fileset>
    </copy>
    <copy todir="${release.dir.src}" overwrite="true">
      <fileset basedir="${source.dir.root}">
        <include name="**"/>
        <exclude name="**/CVS/*"/>
        <exclude name="**/*.vspscc"/>
        <exclude name="**/*.user"/>
        <exclude name="**/obj/**"/>
      </fileset>
    </copy>
    
    <copy todir="${release.dir.current}" overwrite="true">
      <fileset basedir="${project.dir.root}">
        <include name="Tutorial*/**"/>
        <exclude name="Tutorial*/CVS/*"/>
        <exclude name="Tutorial*/*.vspscc"/>
        <exclude name="Tutorial*/*.user"/>
        <exclude name="Tutorial*/*/obj/**"/>
        <exclude name="Tutorial*/*/bin/**"/>
        <exclude name="Tutorial*/*/_*/**"/>
      </fileset>  
    </copy>

    <copy todir="${release.dir.current}" overwrite="true">
      <fileset basedir="${project.dir.root}">
        <include name="NUnits*/**"/>
        <exclude name="NUnits*/CVS/*"/>
        <exclude name="NUnits*/*.vspscc"/>
        <exclude name="NUnits*/*.user"/>
        <exclude name="NUnits*/obj/**"/>
        <exclude name="NUnits*/bin/**"/>
      </fileset>
    </copy>


    <!-- 
		___________________________________________________
		Copy the documentation files to the release directory
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
		<copy todir="${release.dir.doc}" overwrite="true">
			<fileset basedir="${build.dir.doc}">
				<include name="**"/>
			</fileset>
		</copy>

		<!-- 
		___________________________________________________
		Copy the Changelog to the release directory
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
		<copy todir="${release.dir.current}" overwrite="true">
			<fileset basedir="${build.dir.build}">
				<include name="changelog.txt"/>
			</fileset>
		</copy>


		<!-- 
		___________________________________________________
		Copy the binaries to the release directory
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
		<copy todir="${release.dir.bin}" overwrite="true">
			<fileset basedir="${build.dir}">
				<include name="**/debug/*"/>
				<include name="**/release/*"/>
			</fileset>
		</copy>

    <!-- 
      ___________________________________________________
      Remove the readonly flag for distribution
      :::::::::::::::::::::::::::::::::::::::::::::::::::	-->
    <attrib normal="true">
      <fileset basedir="${release.dir.current}">
        <include name="**"/>
      </fileset>
    </attrib>

    <!-- 
		  ___________________________________________________
		  Now Zip all files and copy them to a temporary folder
		  :::::::::::::::::::::::::::::::::::::::::::::::::::	-->
    <zip zipfile="${release.dir.temp}\${release.file.zip}" ziplevel='9'>
      <fileset basedir="${release.dir.current}">
        <include name="**"/>
      </fileset>
    </zip>

    <!-- 
		  ___________________________________________________
		  Now build the installation executable
		  :::::::::::::::::::::::::::::::::::::::::::::::::::	-->
    <loadfile file="${build.dir.build}\ObjectMapper.iss" property="innoscript">
      <filterchain>
        <replacetokens>
          <token key="release.dir" value="${release.dir.current}"/>
          <token key="build.version" value="${build.version}"/>
          <token key="output.dir" value="${release.dir.root}"/>
          <token key="output.file" value="ObjectMapper_${build.version}"/>
        </replacetokens>
      </filterchain>
    </loadfile>
    <echo file="${build.dir.build}\ObjectMapper_Copy.iss" message="${innoscript}"/>
    <exec program="${innosetup}" commandline="${build.dir.build}\ObjectMapper_Copy.iss"/>
    <delete file="${build.dir.build}\ObjectMapper_Copy.iss"/>

    <!-- 
		___________________________________________________
		Now make some clean ups and distribute the release files
		to the distribution directory and the local intranet page.
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
    <delete dir="${release.dir.current}" failonerror="true"/>
    <move file="${release.dir.temp}\${release.file.zip}" tofile="${release.dir.current}\${release.file.zip}" overwrite="true"/>
<!--    <move file="${release.dir.temp}\${release.file.zip}" tofile="${intranet.dir.download}\${release.file.zip}" overwrite="true"/> -->
    <move file="${release.dir.temp}\${release.file.exe}" tofile="${release.dir.current}\${release.file.exe}" overwrite="true"/>
<!--    <move file="${release.dir.temp}\${release.file.exe}" tofile="${intranet.dir.download}\${release.file.exe}" overwrite="true"/> -->

    <!-- 
		___________________________________________________
		Now publish a new PAD file
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
    <tstamp property="build.year" pattern="yyyy" verbose="true"/>
    <tstamp property="build.month" pattern="MM" verbose="true"/>
    <tstamp property="build.day" pattern="dd" verbose="true"/>
    <property name="intranet.padfile" value="${intranet.dir.download}\ObjectMapper_${build.version}.xml"/>
    <loadfile file="${build.file.changelog}" property="changelog"/>
    <loadfile file="${build.dir.build}\padfile.xml" property="padfile">
      <filterchain>
        <replacetokens>
          <token key="VERSION" value="${build.version}"/>
          <token key="YEAR" value="${build.year}"/>
          <token key="MONTH" value="${build.month}"/>
          <token key="DAY" value="${build.day}"/>
          <token key="DOWNLOAD01" value="${internet.download}/ObjectMapper_${build.version}.exe"/>
          <token key="DOWNLOAD02" value="${internet.download}/ObjectMapper_${build.version}.zip"/>
          <token key="SIZE" value="1141164"/>
          <token key="CHANGE_INFO" value="${changelog}"/>
        </replacetokens>
      </filterchain>
    </loadfile>
    <echo file="${intranet.padfile}" message="${padfile}"/>

    <!-- 
		___________________________________________________
		Overwrite the default PAD file with the latest release
		:::::::::::::::::::::::::::::::::::::::::::::::::::	-->
    <copy tofile="${intranet.dir.download}\ObjectMapper.xml" file="${intranet.padfile}" overwrite="true"/>

  </target>

  <!--
	******************************************************
	TAG THE CURRENT CVS
	******************************************************  -->
	<target name="tagRelease">

		<property name="build.version.underline" value = "${string::replace(build.version,'.','_')}"/>
		<exec program="${cvs.exe}" commandline='-d "${cvs.root}" rtag -R "v${build.version.underline}" "ObjectMapper .NET"' workingdir='..\..\'/>
	</target>

	<!--
	******************************************************
	UPDATE THE CURRENT CVS
	******************************************************  -->
	<target name="updateCVS">

		<exec program="${cvs.exe}" commandline='-d "${cvs.root}" checkout -R "ObjectMapper .NET"' workingdir='..\..\'/>

	</target>


  <!--
	******************************************************
	COMMIT THE CHANGES TO THE CVS
	******************************************************  -->
  <target name="commitCVS">

    <exec program="${cvs.exe}" commandline='-d "${cvs.root}" commit -m "Autocommit" -R "ObjectMapper .NET"' workingdir='..\..\'/>

  </target>
  
</project>
